#!groovyâ€‹

ddWithChatMessage {
  withCredentials(
    [usernamePassword(
      credentialsId: 'Expo',
      passwordVariable: 'EXP_PASSWORD',
      usernameVariable: 'EXP_USERNAME'
    ),
    usernamePassword(
      credentialsId: 'Expo_QA',
      usernameVariable: 'EXP_QA_USERNAME',
      passwordVariable: 'EXP_QA_PASSWORD'
    ),
    usernamePassword(
      credentialsId: 'nexus',
      usernameVariable: 'NEXUS_U',
      passwordVariable: 'NEXUS_P'
    ),
    string(credentialsId: 'circlecitoken', variable: 'CIRCLECI_TOKEN')]) {
      return doBuild()
    }
}

def doBuild() {
  node("em-expjs") {
    def externalMethod
    String urlArtifact

    stage('Checkout') {
      checkout scm
      externalMethod = load("scripts/externalMethod.groovy")
    }

    stage('Configure') {
      if (env.JOB_NAME == 'mobile-docdok-ios-demo1') {
        env.EXP_ENV = 'demo1'
      } else {
        env.EXP_ENV = externalMethod.getEnvFromBranch(scm.branches[0].name, env.EXP_ENV)
      }

      sh "yarn copyEnv"
    }

    stage('Install') {
      sh "yarn install"
    }

    timeout(45) {
      stage('Build') {
        if (env.EXP_ENV == 'production') {
          // TODO:  externalMethod.jenkinsNeedsYourInput(env.BUILD_URL, env.JOB_NAME, env.BUILD_NUMBER)
          publish = input message: 'Build in production ? (yes or no)', ok: 'Publish', parameters: [string(defaultValue: 'no', name: 'Response')]
          if (publish == 'yes') {
            sh "yarn build-ipa"
          } else {
            // do nothing
            echo "Not published in production"
            return "Not pushed bundle in production"
          }
        } else {
          sh "yarn build-ipa"
        }
      }
    }

    stage('Archive') {
      urlArtifact = externalMethod.shell("exptool url:artifact")
      sh "curl -o ./docdok-${env.EXP_ENV}.ipa $urlArtifact"
      String endpoint = 'https://nexus3.ocroute.e-medicus.tech/repository/docdok-binaries/'
      sh "curl -u '$NEXUS_U:$NEXUS_P' --upload-file docdok-${env.EXP_ENV}.ipa $endpoint"
    }

    stage('Deploy') {
      if(env.EXP_ENV == 'production' || env.EXP_ENV == 'stage' || env.EXP_ENV == 'demo1') {
        String header = 'Content-Type: application/json'
        String endpoint = 'https://circleci.com/api/v1.1/project/github/e-medicus/mobile-testflight?circle-token=$CIRCLECI_TOKEN'
        status_code = sh(
          script: "curl -X POST --write-out '%{http_code}\n' --silent -o /dev/null --header '$header' -d '{\"build_parameters\": {\"IPA_DOWNLOAD_URL\": \"${urlArtifact.trim()}\"}}' $endpoint",
          returnStdout: true
        )
        if(!status_code.contains("201")) {
          error('TestFlight build not launched: ' + status_code)
        }
      } else {
        echo "No push to TestFlight for this environment: ${env.EXP_ENV}"
      }
    }

    stage('Notify') {
      sh "yarn expo:logout"
      return externalMethod.notifyTeam(
        """
        New mobile iOS app build:
        <br/>
        <a href='https://$NEXUS_U:$NEXUS_P@nexus3.ocroute.e-medicus.tech/repository/docdok-binaries/docdok-${env.EXP_ENV}.ipa'>
          Download IPA
        </a>
        """,
        env.EXP_ENV,
        env.EXP_USERNAME,
        env.BUILD_NUMBER,
        false
      )
    }

  }
}